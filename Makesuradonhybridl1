SHELL= /bin/sh
OPTC= -O -Wall
IDIR=-I$(CWPROOT)/include  -I./clibrary

include $(CWPROOT)/src/Makefile.config

D = $L/libcwp.a $L/libpar.a $L/libsu.a $L/Complex.a

LFLAGS= $(PRELFLAGS) -L$L -lsu -lpar -lcwp -lm $(POSTLFLAGS)

PROG=suradonhybrid

FLAG=-c -O3 -Wall -g

OBJ=  $(PROG).o  Complex.o interpovv.o dot.o modelweight.o save_vector.o \
		 radonwtcgls0.o radonwtcgls.o wtcgls1.o  wtcgls5.o  nmo.o \
		 AtimesBm.o xtimesy.o xminusy.o xplusy.o  \
		 xequaly.o  fftgo.o fftback.o Atimesx.o matrix_3.o freqweight.o \
		 radon_param.o interval.o radfinv.o rcdot.o taper.o  \
		 radonwtcgls_beam.o radon_param_beam.o radoninv_beam.o \
		 radonhybrid.o
	
		 

LIBC=./clibrary

# dependence 
$(PROG): $(OBJ)
	g++ -o ../bin/$(PROG) $(OBJ) $(CFLAGS) $(LFLAGS) 
$(PROG).o: $(PROG).cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
Complex.o: $(LIBC)/Complex.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
interpovv.o: $(LIBC)/interpovv.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
dot.o: $(LIBC)/dot.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
modelweight.o: $(LIBC)/modelweight.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
save_vector.o: $(LIBC)/save_vector.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
nmo.o: $(LIBC)/nmo.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
fftgo.o: $(LIBC)/fftgo.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
fftback.o: $(LIBC)/fftback.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
Atimesx.o: $(LIBC)/Atimesx.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
matrix_3.o: $(LIBC)/matrix_3.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
freqweight.o: $(LIBC)/freqweight.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
radon_param.o: $(LIBC)/radon_param.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
interval.o: $(LIBC)/interval.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
radfinv.o: $(LIBC)/radfinv.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
rcdot.o: $(LIBC)/rcdot.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
taper.o: $(LIBC)/taper.c
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
radonwtcgls0.o: $(LIBC)/radonwtcgls0.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
radonwtcgls.o: $(LIBC)/radonwtcgls.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
wtcgls1.o: $(LIBC)/wtcgls1.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
wtcgls5.o: $(LIBC)/wtcgls5.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
AtimesBm.o: $(LIBC)/AtimesBm.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
xtimesy.o: $(LIBC)/xtimesy.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
xminusy.o: $(LIBC)/xminusy.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
xplusy.o: $(LIBC)/xplusy.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
xequaly.o: $(LIBC)/xequaly.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
radonwtcgls_beam.o: $(LIBC)/radonwtcgls_beam.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
radon_param_beam.o: $(LIBC)/radon_param_beam.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
radoninv_beam.o: $(LIBC)/radoninv_beam.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)
radonhybrid.o: $(LIBC)/radonhybrid.cpp
	g++ $(FLAG) $(OPTC) $(ENDIANFLAG) $? $(IDIR)

