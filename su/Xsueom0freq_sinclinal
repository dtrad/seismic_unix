#! /bin/sh
#  EOM migration test of a sinclinal
# Feb 21 -2002
# Daniel Trad - UBC

set -x

METHOD="${1}"

PLOTC="suxwigb key=cdp wbox=550 hbox=650"
PLOTR="suxwigb key=f2 wbox=550 hbox=650"
PLOTT="suxwigb wbox=550 hbox=650"
PLOTX="suxwigb key=offset wbox=550 hbox=650 perc=90"


NAME=sinclinal3_ray # Test data 

FILE=$NAME'.su'
FILEOUT="${NAME}.${METHOD}.su"
PAR=stkvel.$FILE  
PAR=stkvel.sinclinal3_ray.CSP.su 
#PAR=stkvel.line159ar.cte.su

CDPMIN=50
CDPMAX=3050
# Test parameters
# For CSPs
#CDPMIN=500
#CDPMAX=4500

ncsp=31        # Number of CSPs computed simultaneously
tests=2
dxcdp=10
ntrmax=100000000   # For fast tests use only few traces.

######################################
# Radon parameters

#t0=1.5;
t0=0;
VERBOSE=1
mute=0        
t0mute=6
parmute=5e-8
smute=1.6
parmute=3.2e-7
PLOTOPT='XPLOT3'
LABELT="time(sec)" 
LABELO="Offset(m)"
CDPMIN=500;CDPMAX=4500;
dxcdp=200
rm radondata # Temporal file that acumulates RT space
if [ $METHOD = "EOM" ]; then
scalefold=0.2
BETA=90;
TESTHE=2; # equivalent offset computing method
HMAX=3000  # CSP geometry equal to original geometry
#HMAX=5000
HMIN=0      # 
nh=50 # Original geometry
#nh=90
VERBOSE=1
fold=1
buffer=10;    # Size of filter along time for velocity correction
mute=1        
scale=1
cdpspace=1
aper=3000
qmin=-13e-8


output=3; ncsp=401; dxcdp=10; tests=0;FILEOUT="${NAME}.EOM.su" # Normal EOM+RT 
output=2; ncsp=21; dxcdp=200; tests=1; FILEOUT="${NAME}.CSP.su" # CSPs output
#output=3; ncsp=1; dxcdp=200; tests=1; CDPMIN=2000; CDPMAX=2000; FILEOUT="${NAME}.RT.su"; aper=3000; nh=50 # CSPs output
parmute1=-1e-8
parmute2=1e-8
factor=1.2
qmin=-16e-8
#Test with depth and RTmethod=3
parmute1=0.8e-5
parmute1=-10e-4
parmute2=10e-4
nmofactor=0.9
#FILE="${NAME}.CSPI.su"
#aper=1
#parmute1=0e-1
#parmute2=6e-4
#nmofactor=0.8
rtmethod=3
qmin=-16e-4
qmin=-6e-4
factor=8000
cdpspace=1;
nq=110
#CDPMAX=600
#sueomig0freq < $FILE  cdpmin=$CDPMIN cdpmax=$CDPMAX dxcdp=$dxcdp output=$output  beta=$BETA hmin=$HMIN hmax=$HMAX nh=$nh par=$PAR testhe=$TESTHE  eps=0.01 nq=$nq fold=$fold  ncsp=$ncsp cdpspace=$cdpspace ntrmax=$ntrmax buffer=$buffer t0=$t0  mute1=0 mute2=0 parmute1=$parmute1 parmute2=$parmute2 aper=$aper scalefold=$scalefold qmin=$qmin factor=$factor fmax=80  tests=$tests smute=1.6 nmofactor=$nmofactor compute=1 scale=$scale > "${FILEOUT}"
factor=10
qmin=-20e-4
nmofactor=1
parmute1=-1e-5
parmute2=20e-4
mute1=1
mute2=0
#sueomig7f < $FILE  cdpmin=$CDPMIN cdpmax=$CDPMAX dxcdp=$dxcdp output=4  beta=$BETA hmin=$HMIN hmax=$HMAX nh=$nh par=$PAR testhe=$TESTHE  eps=0.01 nq=$nq fold=$fold  ncsp=$ncsp cdpspace=$cdpspace ntrmax=$ntrmax buffer=$buffer t0=$t0  mute1=$mute1 mute2=$mute2 parmute1=$parmute1 parmute2=$parmute2 aper=$aper scalefold=$scalefold qmin=$qmin factor=$factor fmax=80  tests=$tests smute=1.6 nmofactor=$nmofactor compute=1 scale=$scale verbose=1 rtmethod=$rtmethod solver=cgfft itercg=5 iter_end=3 > "${FILEOUT}"
scale=1
mute1=0
mute2=0
nq=110
t0=0
#sueomig6 < $FILE  cdpmin=$CDPMIN cdpmax=$CDPMAX dxcdp=$dxcdp output=3  beta=$BETA hmin=$HMIN hmax=$HMAX nh=$nh par=$PAR testhe=$TESTHE  eps=0.01 nq=$nq fold=$fold  ncsp=$ncsp cdpspace=$cdpspace ntrmax=$ntrmax buffer=$buffer t0=$t0  mute1=$mute1 mute2=$mute2 parmute1=$parmute1 parmute2=$parmute2 aper=$aper scalefold=$scalefold qmin=0 factor=$factor fmax=80  tests=$tests smute=1.6 nmofactor=$nmofactor compute=1 scale=$scale verbose=1 rtmethod=$rtmethod solver=cgfft itercg=10 iter_end=1 dperv=0.0 pervmin=1e-8 centralq=55 eps1=1 eps2=1 > "${FILEOUT}"

output=3; ncsp=401; dxcdp=10; tests=0;FILEOUT="${NAME}.EOM.su" # Normal EOM+RT 
output=2; ncsp=21; dxcdp=200; tests=1; FILEOUT="${NAME}.CSP.su" # CSPs output

sueom0 < $FILE  cdpmin=$CDPMIN cdpmax=$CDPMAX dxcdp=$dxcdp output=$output beta=$BETA hmin=$HMIN hmax=$HMAX nh=$nh par=$PAR testhe=$TESTHE  fold=$fold  ncsp=$ncsp cdpspace=$cdpspace ntrmax=$ntrmax  aper=$aper scalefold=$scalefold  verbose=1  > "${FILEOUT}"



Xsetntr "${FILEOUT}"
suximage < "${FILEOUT}"  title=${FILEOUT} perc=99.8 &



# Test: examine the csp gather.
sushw key=cdp a=600 < before | suchw key1=offset key2=offset b=-1 | susort +offset > csp600c.su

elif [ $METHOD = "KMIG" ]; then

VERBOSE=0
dfold=1
cdpspace=1
aper=3000
ntrmax=100000

sukmig5 < $FILE  cdpmin=$CDPMIN cdpmax=$CDPMAX dxcdp=$dxcdp output=1  beta=$BETA  par=$PAR dfold=1   cdpspace=$cdpspace ntrmax=$ntrmax  aper=$aper verbose=$VERBOSE ntrmax=$ntrmax > $FILEOUT
suximage < $FILEOUT  title=$FILEOUT  &

elif [ $METHOD = "STK" ]; then

suradonline_stack < $FILE  cdpmin=$CDPMIN cdpmax=$CDPMAX dxcdp=$dxcdp nhcdp=$nhcdp par=$PAR nq=110 verbose=$VERBOSE ntrmax=$ntrmax smute=$smute parmute=$parmute qmin=-3.5e-8 factor=1.2 fmax=80 nmofactor=1 offsetfile="${NAME}.suoff" tests=1 eps=1e-1 > $FILEOUT
elif [ $METHOD = "SOL" ]; then
#parmute=1.5e-9
qmin=-16e-8
parmute=3e-8
factor=3
PAR=stkvel.sinclinal3_ray_prim.su 
#TEST with rtmethod=3

parmute=1e-4
mute=1
rtmethod=3
depth=500
qmin=-4e-4
factor=1
suradonline < $FILE  cdpmin=$CDPMIN cdpmax=$CDPMAX dxcdp=$dxcdp nhcdp=$nhcdp par=$PAR itercg=30 iter_end=3 eps2=1e-1 eps1=1e-1 nq=110 verbose=$VERBOSE ntrmax=$ntrmax tmpdir='./' norm=0 buffer=$buffer t0=$t0 smute=$smute mute=$mute  parmute=$parmute qmin=$qmin factor=$factor fmax=80 solver="$2" t0mute=0 nmofactor=1 depth=$depth rtmethod=$rtmethod > $FILEOUT
else
itercg=100
suradoncgfft_tfd2 < $FILE  cdpmin=$CDPMIN cdpmax=$CDPMAX dxcdp=$dxcdp nhcdp=$nhcdp par=$PAR itercg=$itercg iter_end=3 eps2=5e-2 eps1=5e-2 nq=110 verbose=$VERBOSE ntrmax=$ntrmax tmpdir='./' norm=0 buffer=$buffer t0=$t0 smute=$smute mute=$mute  parmute=1.5e-9 qmin=-3.5e-8 factor=1.5 fmax=80  t0mute=$t0mute  > $FILEOUT
fi



################################################################

case $PLOTOPT in
    PSPLOT*)
    ;;

    XPLOT2*)
    
    cdp=$CDPMIN
      
    while [ $cdp -le $CDPMAX ]
    do
    title=$cdp' CDP'
    suwind key=cdp min=$cdp max=$cdp  < $FILEOUT | $PLOTX  title=$title &
    suwind key=cdp min=$cdp max=$cdp  < model.su | $PLOTR  title=$title &

cdp=`bc -l <<END
		$cdp + $DXCDP
END`


    done
    ;;
esac


Xsetntr $FILEOUT



 




































































































