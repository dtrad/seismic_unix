#! /bin/sh
# Velocity analyses for the cmp gathers
# Authors: Dave Hale, Jack K. Cohen, with modifications by John Stockwell
# NOTE: Comment lines preceeding user input start with  ##
#set -x
# proprocessing from shots
suchw key1=cdp key2=gx key3=sx b=1 c=1 d=2 < /data/su/marmshots2.su > temp.su
susort +cdp +offset < temp.su > marmcmps2.su
## Set parameters

rm panel.*
rm panel_proc.*
rm semb.*
rm sembb*
rm cdp.*




velpanel=marmcmps2.su	# gained and deconvolved seismic data,
			 		# sorted in cdp's
vpicks=stkvel.p1	# output file of vnmo= and tnmo= values
normpow=0		# see selfdoc for suvelan
slowness=0		# see selfdoc for suvelan
cdpfirst=400		# minimum cdp value in data
cdplast=2000		# maximum cdp value in data
cdpmin=100		# minimum cdp value used in velocity analysis
cdpmax=3016		# maximum cdp value used in velocity analysis
dcdp=96		# change in cdp for velocity scans
fold=100		 	# only have 12 shots, otherwise would be 
			#  64/2=32 for dsx=dgx, or maximum number
			#  of traces per cdp gather
dxcdp=24		# distance between successive midpoints
                        #    in full datas set


## Set velocity sampling and band pass filters
nv=120			# number of velocities in scan
dv=10.0			# velocity sampling interval in scan	
fv=1500.0		# first velocity in scan
nout=501		# ns in data		

## Set interpolation type 
interpolation=akima	# choices are linear, spline, akima, mono

## set filter values
f=1,10,80,100		# bandwidth of data to pass
amps=0,1,1,0		# don't change

## number of contours in contour plot
nc=35		# this number should be at least 25
fc=.05		# This number should be between .05 to .15 for real data 
ccolor=black,grey,green,black,grey,cyan,black,grey,blue,black,grey,blue,red,red,red
perc=97		# clip above perc percential in amplitude
xcur=3		# allow xcur trace xcursion

######## You shouldn't have to change anything below this line ###########
#average velocity
vaverage=3000        # this may be adjusted

# binary files output
vrmst=vrmst.bin		# VRMS(t) interpolated rms velocities
vintt=vintt.bin		# VINT(t,x) as picked
vinttav=vinttav.bin	# average  VINT(t) of VINT(t,x)
vinttuni=vinttuni.bin	# interploated Vint(t,x)
vintzx=vintzx.bin	# VINT(z,x)interpolated interval velocities
vintxz=vintxz.bin	# VINT(x,z)interpolated interval velocities

### Get header info
cdpcount=0		 #  counting variable
dxout=0.004		# don't change this

nout=`sugethw ns <$velpanel | sed 1q | sed 's/.*ns=//'`
dt=`sugethw dt <$velpanel | sed 1q | sed 's/.*dt=//'`
dxout=`bc -l <<END
	$dt / 1000000
END`

cdptotal=`bc -l <<END
	$cdplast - $cdpfirst
END`

dtsec=`bc -l <<END
        $dt / 1000000
END`

echo "Beginning the velocity analysis"

########################### start velocity analysis #####################



cdp=$cdpmin
while [ $cdp -le $cdpmax ]
do
	cdpcount=` expr $cdpcount + 1 `
	ok=true
	# begin velocity analysis
	echo "Starting velocity analysis for cdp $cdp"
	suwind < $velpanel key=cdp min=$cdp max=$cdp \
	    count=$fold > panel.$cdp 

	#suxwigb < panel.$cdp title="CDP gather for cdp=$cdp" \
	#		xbox=50 mpicks=mpicks.$cdp \
	#		perc=$perc xcur=$xcur wbox=300 &
	sugain tpow=0 < panel.$cdp |
	sufilter f=$f amps=$amps > panel_proc.$cdp
	sustrip < panel_proc.$cdp > cdp.$cdp
	suvelan nv=$nv dv=$dv fv=$fv > semb.$cdp < panel_proc.$cdp
	sustrip < semb.$cdp > sembbin.$cdp
	sugethw key=offset < panel.$cdp output=geom > offset$cdp
	#suxcontour < semb.$cdp nc=$nc f2=$fv d2=$dv xbox=450 wbox=600 \
	#units="semblance" fc=$fc ccolor=$ccolor \
	#label1="Time (sec)" label2="Velocity (m/sec)" \
	#title="Velocity Scan (semblance plot) for CMP $cdp" \
	#mpicks=mpicks.$cdp

	#sort <mpicks.$cdp  -n |
	#mkparfile string1=tnmo string2=vnmo >par.$cdp

	# view the picked velocity function 
	echo "Putting up velocity function for cdp $cdp"
	#sed <par.$cdp '
	#	s/tnmo/xin/
	#	s/vnmo/yin/
	#' >unisam.p
	#unisam nout=$nout fxout=0.0 dxout=$dxout \
	#	par=unisam.p method=$interpolation |
	#xgraph n=$nout nplot=1 d1=$dxout f1=0.0 width=400 height=700 \
	#	label1="Time (sec)" label2="Velocity (m/sec)" \
	#	title="Stacking Velocity Function: CMP $cdp" \
	#	grid1=solid grid2=solid \
	#	linecolor=2 style=seismic &

	#pause

	# view an NMO of the panel
	echo "Hit return after nmo panel comes up"
        #sunmo < panel.$cdp par=par.$cdp |
        #suxwigb title="NMO of cdp=$cdp" wbox=300 xcur=$xcur \
	#	perc=$perc xcur=$xcur  &
	

	
	cdp=`bc -l <<END
		$cdp + $dcdp
END`
	echo $cdp	
done

set +x


### Combine the individual picks into a composite sunmo par file
echo "Editing pick files ..."
>$vpicks
echo  "cdp=" | tr -d "\012" >>$vpicks
cdp=$cdpmin
echo  "$cdp"  | tr -d "\012" >>$vpicks
cdp=`bc -l <<END
	$cdp + $dcdp
END`
while [ $cdp -le $cdpmax ]
do
	echo  ",$cdp"  | tr -d "\012" >>$vpicks
	cdp=`bc -l <<END
		$cdp + $dcdp
END`
done
echo >>$vpicks

cdpcount=0
rm $vrmst
cdp=$cdpmin
while [ $cdp -le $cdpmax ]
do
	cat $vrmst.$cdp >> $vrmst
	cat par.$cdp >>$vpicks
	cdp=`bc -l <<END
		$cdp + $dcdp
END`
	cdpcount=` expr $cdpcount + 1 `
done

# build velocity files to be used for later migration
vrmstpar=vrmst.par
vinttpar=vintt.par
vinttplotpar=vinttplot.par
unipar=unisam.par

# build par files
echo "n1=$nout n2=$cdpcount f2=$cdpmin d2=$dcdp " > $vrmstpar
echo "nt=$nout ns=$nout nx=$cdpcount fx=$cdpmin dx=$dcdp  " > $vinttpar
echo "n=$nout nplot=1 d1=$dxout style=seismic width=400 height=700  " > $vinttplotpar
echo "nx1=$nout nx2=$cdpcount n1=$nout n2=$cdptotal" > $unipar

# convert rms velocities to interval velocities 
velconv intype=vrmst outtype=vintt  par=$vinttpar < $vrmst > $vintt

# make an average velocity profile
suaddhead < $vintt ns=$nout | sustack | sustrip  > $vinttav 

# build a uniformly sampled v(t,x) velocity profile
unisam2 < $vintt par=$unipar  | smooth2 r1=5 r2=5 par=$unipar >  $vinttuni

                                                                                
# get depth sampling interval
dzout=`bc -l <<END
        ( $vaverage * $dtsec ) / 2.0
END`
                                                                                
echo $dzout
                                                                                
# build v(z,x)
velconv intype=vintt outtype=vintz  dt=$dtsec \
nx=$cdplast nz=$nout dz=$dzout < $vinttuni |
smooth2 r1=10 r2=20 n1=$nout n2=$cdplast > $vintzx
                                                                                
# build v(x,z)
transp < $vintzx n1=$nout > $vintxz


# final echos
echo "V(t) RMS (stacking) velocity file: $vrmst is ready"
echo "V(t,x) Interval velocity file: $vintt is ready"
echo "V(z,x) Interval velocity file: $vintzx is ready"
echo "sunmo par file: $vpicks is ready"

cp sembbin.2020 /home/dtrad/pythonexamples/MLprojects/semblance/.
cp offset2020 /home/dtrad/pythonexamples/MLprojects/semblance/.
cp cdp.2020 /home/dtrad/pythonexamples/MLprojects/semblance/.
exit 0
